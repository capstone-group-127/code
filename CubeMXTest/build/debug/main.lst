ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB43:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** uint8_t data = 0x55;
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** uint8_t address[3] = {0x00, 0x00, 0x01};
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** uint8_t read_data;
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MX_GPIO_Init(void);
  58:Core/Src/main.c **** static void MX_SPI1_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****   * @brief  The application entry point.
  70:Core/Src/main.c ****   * @retval int
  71:Core/Src/main.c ****   */
  72:Core/Src/main.c **** int main(void)
  73:Core/Src/main.c **** {
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Core/Src/main.c ****   HAL_Init();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Configure the system clock */
  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 3


  91:Core/Src/main.c ****   
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_SPI1_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   
 101:Core/Src/main.c **** /*
 102:Core/Src/main.c ****   uint8_t memory_address[3] = {0x00, 0x00, 0x00};
 103:Core/Src/main.c ****   for (uint8_t index = 1; index < 256; index++) {
 104:Core/Src/main.c ****       uint8_t data_to_write = index;
 105:Core/Src/main.c ****       uint8_t data_read_back = 0;
 106:Core/Src/main.c ****       memory_address[2] = index;
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****       // Write operation
 109:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
 110:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, (uint8_t *)&CMD_WRITE, 1, 100);
 111:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, memory_address, 3, 100);
 112:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, &data_to_write, 1, 100);
 113:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET);
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****       // Perform double read operation due to IC requirement
 116:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
 117:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, (uint8_t *)&CMD_READ, 1, 100);
 118:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, memory_address, 3, 100);
 119:Core/Src/main.c ****       HAL_SPI_Receive(&hspi1, &data_read_back, 1, 100);
 120:Core/Src/main.c ****       HAL_SPI_Receive(&hspi1, &data_read_back, 1, 100);
 121:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET);
 122:Core/Src/main.c ****   }
 123:Core/Src/main.c ****       */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****       /*HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
 127:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, (uint8_t *)&CMD_WRITE, 1, 100);
 128:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, memory_address, 3, 100);
 129:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, &data_to_write, 1, 100);
 130:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****       HAL_Delay(100);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
 135:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, (uint8_t *)&CMD_READ, 1, 100);
 136:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, memory_address, 3, 100);
 137:Core/Src/main.c ****       HAL_SPI_Receive(&hspi1, &data_read_back, 1, 100);
 138:Core/Src/main.c ****       HAL_SPI_Receive(&hspi1, &data_read_back, 1, 100);
 139:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET);
 140:Core/Src/main.c ****       */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****       //Set the write enable latch
 143:Core/Src/main.c ****       /*HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 144:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, (uint8_t *)&CMD_WRITE_BIT_EEPROM, 1, 100);
 145:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****       HAL_Delay(100);
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 4


 148:Core/Src/main.c ****       //Send the data
 149:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 150:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, &CMD_WRITE_EEPROM, 1, 100);
 151:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, memory_address_EEPROM, 2, 100);
 152:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, &data_to_write, 1, 100);
 153:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****       HAL_Delay(100);
 156:Core/Src/main.c ****       //Disable the write enable latch
 157:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 158:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, &CMD_WRDI_BIT_EEPROM, 1, 100);
 159:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****       HAL_Delay(100);
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****       //Send the read command
 164:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 165:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, &CMD_READ_EEPROM, 1, 100);
 166:Core/Src/main.c ****       HAL_SPI_Transmit(&hspi1, memory_address_EEPROM, 2, 100);
 167:Core/Src/main.c ****       HAL_SPI_Receive(&hspi1, &data_read_back, 1, 100);
 168:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 169:Core/Src/main.c ****       */
 170:Core/Src/main.c ****       
 171:Core/Src/main.c ****      SRAM_WRITE(&data, address);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****      read_data = SRAM_READ(address);
 174:Core/Src/main.c ****   /* USER CODE END 2 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* Infinite loop */
 177:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 178:Core/Src/main.c ****   while (1)
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     /* USER CODE END WHILE */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****     
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c ****   /* USER CODE END 3 */
 187:Core/Src/main.c **** }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /**
 190:Core/Src/main.c ****   * @brief System Clock Configuration
 191:Core/Src/main.c ****   * @retval None
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c **** void SystemClock_Config(void)
 194:Core/Src/main.c **** {
 195:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 196:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 199:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 202:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 203:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 5


 205:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 213:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 214:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 215:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 219:Core/Src/main.c ****   {
 220:Core/Src/main.c ****     Error_Handler();
 221:Core/Src/main.c ****   }
 222:Core/Src/main.c **** }
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** /**
 225:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 226:Core/Src/main.c ****   * @param None
 227:Core/Src/main.c ****   * @retval None
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c **** static void MX_SPI1_Init(void)
 230:Core/Src/main.c **** {
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 239:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 240:Core/Src/main.c ****   hspi1.Instance = SPI1;
 241:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 242:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 243:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 244:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 245:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 246:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 247:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 248:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 249:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 250:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 251:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 252:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 253:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 254:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 255:Core/Src/main.c ****   {
 256:Core/Src/main.c ****     Error_Handler();
 257:Core/Src/main.c ****   }
 258:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 261:Core/Src/main.c **** 
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 6


 262:Core/Src/main.c **** }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /**
 265:Core/Src/main.c ****   * @brief GPIO Initialization Function
 266:Core/Src/main.c ****   * @param None
 267:Core/Src/main.c ****   * @retval None
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c **** static void MX_GPIO_Init(void)
 270:Core/Src/main.c **** {
  26              		.loc 1 270 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 C646     		mov	lr, r8
  38 0004 00B5     		push	{lr}
  39              		.cfi_def_cfa_offset 24
  40              		.cfi_offset 8, -24
  41 0006 88B0     		sub	sp, sp, #32
  42              		.cfi_def_cfa_offset 56
 271:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 271 3 view .LVU1
  44              		.loc 1 271 20 is_stmt 0 view .LVU2
  45 0008 03AC     		add	r4, sp, #12
  46 000a 1422     		movs	r2, #20
  47 000c 0021     		movs	r1, #0
  48 000e 2000     		movs	r0, r4
  49 0010 FFF7FEFF 		bl	memset
  50              	.LVL0:
 272:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 273:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 276:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  51              		.loc 1 276 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 276 3 view .LVU4
  54              		.loc 1 276 3 view .LVU5
  55 0014 204B     		ldr	r3, .L2
  56 0016 5A69     		ldr	r2, [r3, #20]
  57 0018 8021     		movs	r1, #128
  58 001a 0903     		lsls	r1, r1, #12
  59 001c 0A43     		orrs	r2, r1
  60 001e 5A61     		str	r2, [r3, #20]
  61              		.loc 1 276 3 view .LVU6
  62 0020 5A69     		ldr	r2, [r3, #20]
  63 0022 0A40     		ands	r2, r1
  64 0024 0092     		str	r2, [sp]
  65              		.loc 1 276 3 view .LVU7
  66 0026 009A     		ldr	r2, [sp]
  67              	.LBE4:
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 7


  68              		.loc 1 276 3 view .LVU8
 277:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  69              		.loc 1 277 3 view .LVU9
  70              	.LBB5:
  71              		.loc 1 277 3 view .LVU10
  72              		.loc 1 277 3 view .LVU11
  73 0028 5A69     		ldr	r2, [r3, #20]
  74 002a 8021     		movs	r1, #128
  75 002c 8902     		lsls	r1, r1, #10
  76 002e 0A43     		orrs	r2, r1
  77 0030 5A61     		str	r2, [r3, #20]
  78              		.loc 1 277 3 view .LVU12
  79 0032 5A69     		ldr	r2, [r3, #20]
  80 0034 0A40     		ands	r2, r1
  81 0036 0192     		str	r2, [sp, #4]
  82              		.loc 1 277 3 view .LVU13
  83 0038 019A     		ldr	r2, [sp, #4]
  84              	.LBE5:
  85              		.loc 1 277 3 view .LVU14
 278:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  86              		.loc 1 278 3 view .LVU15
  87              	.LBB6:
  88              		.loc 1 278 3 view .LVU16
  89              		.loc 1 278 3 view .LVU17
  90 003a 5A69     		ldr	r2, [r3, #20]
  91 003c 8021     		movs	r1, #128
  92 003e C902     		lsls	r1, r1, #11
  93 0040 0A43     		orrs	r2, r1
  94 0042 5A61     		str	r2, [r3, #20]
  95              		.loc 1 278 3 view .LVU18
  96 0044 5B69     		ldr	r3, [r3, #20]
  97 0046 0B40     		ands	r3, r1
  98 0048 0293     		str	r3, [sp, #8]
  99              		.loc 1 278 3 view .LVU19
 100 004a 029B     		ldr	r3, [sp, #8]
 101              	.LBE6:
 102              		.loc 1 278 3 view .LVU20
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 281:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 103              		.loc 1 281 3 view .LVU21
 104 004c 8025     		movs	r5, #128
 105 004e AD01     		lsls	r5, r5, #6
 106 0050 124B     		ldr	r3, .L2+4
 107 0052 9846     		mov	r8, r3
 108 0054 0022     		movs	r2, #0
 109 0056 2900     		movs	r1, r5
 110 0058 1800     		movs	r0, r3
 111 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 112              	.LVL1:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 284:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1|GPIO_PIN_2, GPIO_PIN_SET);
 113              		.loc 1 284 3 view .LVU22
 114 005e 104E     		ldr	r6, .L2+8
 115 0060 0122     		movs	r2, #1
 116 0062 0621     		movs	r1, #6
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 8


 117 0064 3000     		movs	r0, r6
 118 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL2:
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 287:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 120              		.loc 1 287 3 view .LVU23
 121              		.loc 1 287 23 is_stmt 0 view .LVU24
 122 006a 0395     		str	r5, [sp, #12]
 288:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 123              		.loc 1 288 3 is_stmt 1 view .LVU25
 124              		.loc 1 288 24 is_stmt 0 view .LVU26
 125 006c 0127     		movs	r7, #1
 126 006e 0497     		str	r7, [sp, #16]
 289:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 127              		.loc 1 289 3 is_stmt 1 view .LVU27
 128              		.loc 1 289 24 is_stmt 0 view .LVU28
 129 0070 0025     		movs	r5, #0
 130 0072 0595     		str	r5, [sp, #20]
 290:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 131              		.loc 1 290 3 is_stmt 1 view .LVU29
 132              		.loc 1 290 25 is_stmt 0 view .LVU30
 133 0074 0695     		str	r5, [sp, #24]
 291:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 134              		.loc 1 291 3 is_stmt 1 view .LVU31
 135 0076 2100     		movs	r1, r4
 136 0078 4046     		mov	r0, r8
 137 007a FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL3:
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /*Configure GPIO pins : PB1 PB2 */
 294:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2;
 139              		.loc 1 294 3 view .LVU32
 140              		.loc 1 294 23 is_stmt 0 view .LVU33
 141 007e 0623     		movs	r3, #6
 142 0080 0393     		str	r3, [sp, #12]
 295:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 143              		.loc 1 295 3 is_stmt 1 view .LVU34
 144              		.loc 1 295 24 is_stmt 0 view .LVU35
 145 0082 0497     		str	r7, [sp, #16]
 296:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 146              		.loc 1 296 3 is_stmt 1 view .LVU36
 147              		.loc 1 296 24 is_stmt 0 view .LVU37
 148 0084 0595     		str	r5, [sp, #20]
 297:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 149              		.loc 1 297 3 is_stmt 1 view .LVU38
 150              		.loc 1 297 25 is_stmt 0 view .LVU39
 151 0086 0695     		str	r5, [sp, #24]
 298:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 152              		.loc 1 298 3 is_stmt 1 view .LVU40
 153 0088 2100     		movs	r1, r4
 154 008a 3000     		movs	r0, r6
 155 008c FFF7FEFF 		bl	HAL_GPIO_Init
 156              	.LVL4:
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 301:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 9


 302:Core/Src/main.c **** }
 157              		.loc 1 302 1 is_stmt 0 view .LVU41
 158 0090 08B0     		add	sp, sp, #32
 159              		@ sp needed
 160 0092 80BC     		pop	{r7}
 161 0094 B846     		mov	r8, r7
 162 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 163              	.L3:
 164              		.align	2
 165              	.L2:
 166 0098 00100240 		.word	1073876992
 167 009c 00080048 		.word	1207961600
 168 00a0 00040048 		.word	1207960576
 169              		.cfi_endproc
 170              	.LFE43:
 172              		.section	.text.Error_Handler,"ax",%progbits
 173              		.align	1
 174              		.global	Error_Handler
 175              		.syntax unified
 176              		.code	16
 177              		.thumb_func
 179              	Error_Handler:
 180              	.LFB44:
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /* USER CODE END 4 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** /**
 309:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 310:Core/Src/main.c ****   * @retval None
 311:Core/Src/main.c ****   */
 312:Core/Src/main.c **** void Error_Handler(void)
 313:Core/Src/main.c **** {
 181              		.loc 1 313 1 is_stmt 1 view -0
 182              		.cfi_startproc
 183              		@ Volatile: function does not return.
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 314:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 315:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 316:Core/Src/main.c ****   __disable_irq();
 187              		.loc 1 316 3 view .LVU43
 188              	.LBB7:
 189              	.LBI7:
 190              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 10


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 11


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 12


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 191              		.loc 2 140 27 view .LVU44
 192              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 193              		.loc 2 142 3 view .LVU45
 194              		.syntax divided
 195              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 196 0000 72B6     		cpsid i
 197              	@ 0 "" 2
 198              		.thumb
 199              		.syntax unified
 200              	.L5:
 201              	.LBE8:
 202              	.LBE7:
 317:Core/Src/main.c ****   while (1)
 203              		.loc 1 317 3 view .LVU46
 318:Core/Src/main.c ****   {
 319:Core/Src/main.c ****   }
 204              		.loc 1 319 3 view .LVU47
 317:Core/Src/main.c ****   while (1)
 205              		.loc 1 317 9 view .LVU48
 206 0002 FEE7     		b	.L5
 207              		.cfi_endproc
 208              	.LFE44:
 210              		.section	.text.MX_SPI1_Init,"ax",%progbits
 211              		.align	1
 212              		.syntax unified
 213              		.code	16
 214              		.thumb_func
 216              	MX_SPI1_Init:
 217              	.LFB42:
 230:Core/Src/main.c **** 
 218              		.loc 1 230 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222 0000 10B5     		push	{r4, lr}
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 4, -8
 225              		.cfi_offset 14, -4
 240:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 13


 226              		.loc 1 240 3 view .LVU50
 240:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 227              		.loc 1 240 18 is_stmt 0 view .LVU51
 228 0002 1048     		ldr	r0, .L9
 229 0004 104B     		ldr	r3, .L9+4
 230 0006 0360     		str	r3, [r0]
 241:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 231              		.loc 1 241 3 is_stmt 1 view .LVU52
 241:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 232              		.loc 1 241 19 is_stmt 0 view .LVU53
 233 0008 8223     		movs	r3, #130
 234 000a 5B00     		lsls	r3, r3, #1
 235 000c 4360     		str	r3, [r0, #4]
 242:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 236              		.loc 1 242 3 is_stmt 1 view .LVU54
 242:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 237              		.loc 1 242 24 is_stmt 0 view .LVU55
 238 000e 0023     		movs	r3, #0
 239 0010 8360     		str	r3, [r0, #8]
 243:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 240              		.loc 1 243 3 is_stmt 1 view .LVU56
 243:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 241              		.loc 1 243 23 is_stmt 0 view .LVU57
 242 0012 E022     		movs	r2, #224
 243 0014 D200     		lsls	r2, r2, #3
 244 0016 C260     		str	r2, [r0, #12]
 244:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 245              		.loc 1 244 3 is_stmt 1 view .LVU58
 244:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 246              		.loc 1 244 26 is_stmt 0 view .LVU59
 247 0018 0361     		str	r3, [r0, #16]
 245:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 248              		.loc 1 245 3 is_stmt 1 view .LVU60
 245:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 249              		.loc 1 245 23 is_stmt 0 view .LVU61
 250 001a 4361     		str	r3, [r0, #20]
 246:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 251              		.loc 1 246 3 is_stmt 1 view .LVU62
 246:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 252              		.loc 1 246 18 is_stmt 0 view .LVU63
 253 001c 8022     		movs	r2, #128
 254 001e 9200     		lsls	r2, r2, #2
 255 0020 8261     		str	r2, [r0, #24]
 247:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 256              		.loc 1 247 3 is_stmt 1 view .LVU64
 247:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 257              		.loc 1 247 32 is_stmt 0 view .LVU65
 258 0022 C361     		str	r3, [r0, #28]
 248:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 259              		.loc 1 248 3 is_stmt 1 view .LVU66
 248:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 260              		.loc 1 248 23 is_stmt 0 view .LVU67
 261 0024 0362     		str	r3, [r0, #32]
 249:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 262              		.loc 1 249 3 is_stmt 1 view .LVU68
 249:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 263              		.loc 1 249 21 is_stmt 0 view .LVU69
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 14


 264 0026 4362     		str	r3, [r0, #36]
 250:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 265              		.loc 1 250 3 is_stmt 1 view .LVU70
 250:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 266              		.loc 1 250 29 is_stmt 0 view .LVU71
 267 0028 8362     		str	r3, [r0, #40]
 251:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 268              		.loc 1 251 3 is_stmt 1 view .LVU72
 251:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 269              		.loc 1 251 28 is_stmt 0 view .LVU73
 270 002a FA3A     		subs	r2, r2, #250
 271 002c FF3A     		subs	r2, r2, #255
 272 002e C262     		str	r2, [r0, #44]
 252:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 273              		.loc 1 252 3 is_stmt 1 view .LVU74
 252:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 274              		.loc 1 252 24 is_stmt 0 view .LVU75
 275 0030 0363     		str	r3, [r0, #48]
 253:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 276              		.loc 1 253 3 is_stmt 1 view .LVU76
 253:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 277              		.loc 1 253 23 is_stmt 0 view .LVU77
 278 0032 0833     		adds	r3, r3, #8
 279 0034 4363     		str	r3, [r0, #52]
 254:Core/Src/main.c ****   {
 280              		.loc 1 254 3 is_stmt 1 view .LVU78
 254:Core/Src/main.c ****   {
 281              		.loc 1 254 7 is_stmt 0 view .LVU79
 282 0036 FFF7FEFF 		bl	HAL_SPI_Init
 283              	.LVL5:
 254:Core/Src/main.c ****   {
 284              		.loc 1 254 6 discriminator 1 view .LVU80
 285 003a 0028     		cmp	r0, #0
 286 003c 00D1     		bne	.L8
 262:Core/Src/main.c **** 
 287              		.loc 1 262 1 view .LVU81
 288              		@ sp needed
 289 003e 10BD     		pop	{r4, pc}
 290              	.L8:
 256:Core/Src/main.c ****   }
 291              		.loc 1 256 5 is_stmt 1 view .LVU82
 292 0040 FFF7FEFF 		bl	Error_Handler
 293              	.LVL6:
 294              	.L10:
 295              		.align	2
 296              	.L9:
 297 0044 00000000 		.word	hspi1
 298 0048 00300140 		.word	1073819648
 299              		.cfi_endproc
 300              	.LFE42:
 302              		.section	.text.SystemClock_Config,"ax",%progbits
 303              		.align	1
 304              		.global	SystemClock_Config
 305              		.syntax unified
 306              		.code	16
 307              		.thumb_func
 309              	SystemClock_Config:
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 15


 310              	.LFB41:
 194:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 311              		.loc 1 194 1 view -0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 72
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315 0000 10B5     		push	{r4, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 4, -8
 318              		.cfi_offset 14, -4
 319 0002 92B0     		sub	sp, sp, #72
 320              		.cfi_def_cfa_offset 80
 195:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 321              		.loc 1 195 3 view .LVU84
 195:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 322              		.loc 1 195 22 is_stmt 0 view .LVU85
 323 0004 05AC     		add	r4, sp, #20
 324 0006 3422     		movs	r2, #52
 325 0008 0021     		movs	r1, #0
 326 000a 2000     		movs	r0, r4
 327 000c FFF7FEFF 		bl	memset
 328              	.LVL7:
 196:Core/Src/main.c **** 
 329              		.loc 1 196 3 is_stmt 1 view .LVU86
 196:Core/Src/main.c **** 
 330              		.loc 1 196 22 is_stmt 0 view .LVU87
 331 0010 1022     		movs	r2, #16
 332 0012 0021     		movs	r1, #0
 333 0014 01A8     		add	r0, sp, #4
 334 0016 FFF7FEFF 		bl	memset
 335              	.LVL8:
 201:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 336              		.loc 1 201 3 is_stmt 1 view .LVU88
 201:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 337              		.loc 1 201 36 is_stmt 0 view .LVU89
 338 001a 0223     		movs	r3, #2
 339 001c 0593     		str	r3, [sp, #20]
 202:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 340              		.loc 1 202 3 is_stmt 1 view .LVU90
 202:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 341              		.loc 1 202 30 is_stmt 0 view .LVU91
 342 001e 013B     		subs	r3, r3, #1
 343 0020 0893     		str	r3, [sp, #32]
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 344              		.loc 1 203 3 is_stmt 1 view .LVU92
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 345              		.loc 1 203 41 is_stmt 0 view .LVU93
 346 0022 0F33     		adds	r3, r3, #15
 347 0024 0993     		str	r3, [sp, #36]
 204:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 348              		.loc 1 204 3 is_stmt 1 view .LVU94
 205:Core/Src/main.c ****   {
 349              		.loc 1 205 3 view .LVU95
 205:Core/Src/main.c ****   {
 350              		.loc 1 205 7 is_stmt 0 view .LVU96
 351 0026 2000     		movs	r0, r4
 352 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 16


 353              	.LVL9:
 205:Core/Src/main.c ****   {
 354              		.loc 1 205 6 discriminator 1 view .LVU97
 355 002c 0028     		cmp	r0, #0
 356 002e 0DD1     		bne	.L14
 212:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 357              		.loc 1 212 3 is_stmt 1 view .LVU98
 212:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 358              		.loc 1 212 31 is_stmt 0 view .LVU99
 359 0030 01A8     		add	r0, sp, #4
 360 0032 0723     		movs	r3, #7
 361 0034 0193     		str	r3, [sp, #4]
 214:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 362              		.loc 1 214 3 is_stmt 1 view .LVU100
 214:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 363              		.loc 1 214 34 is_stmt 0 view .LVU101
 364 0036 0023     		movs	r3, #0
 365 0038 4360     		str	r3, [r0, #4]
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 366              		.loc 1 215 3 is_stmt 1 view .LVU102
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 367              		.loc 1 215 35 is_stmt 0 view .LVU103
 368 003a 8360     		str	r3, [r0, #8]
 216:Core/Src/main.c **** 
 369              		.loc 1 216 3 is_stmt 1 view .LVU104
 216:Core/Src/main.c **** 
 370              		.loc 1 216 36 is_stmt 0 view .LVU105
 371 003c C360     		str	r3, [r0, #12]
 218:Core/Src/main.c ****   {
 372              		.loc 1 218 3 is_stmt 1 view .LVU106
 218:Core/Src/main.c ****   {
 373              		.loc 1 218 7 is_stmt 0 view .LVU107
 374 003e 0021     		movs	r1, #0
 375 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 376              	.LVL10:
 218:Core/Src/main.c ****   {
 377              		.loc 1 218 6 discriminator 1 view .LVU108
 378 0044 0028     		cmp	r0, #0
 379 0046 03D1     		bne	.L15
 222:Core/Src/main.c **** 
 380              		.loc 1 222 1 view .LVU109
 381 0048 12B0     		add	sp, sp, #72
 382              		@ sp needed
 383 004a 10BD     		pop	{r4, pc}
 384              	.L14:
 207:Core/Src/main.c ****   }
 385              		.loc 1 207 5 is_stmt 1 view .LVU110
 386 004c FFF7FEFF 		bl	Error_Handler
 387              	.LVL11:
 388              	.L15:
 220:Core/Src/main.c ****   }
 389              		.loc 1 220 5 view .LVU111
 390 0050 FFF7FEFF 		bl	Error_Handler
 391              	.LVL12:
 392              		.cfi_endproc
 393              	.LFE41:
 395              		.section	.text.SRAM_WRITE,"ax",%progbits
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 17


 396              		.align	1
 397              		.global	SRAM_WRITE
 398              		.syntax unified
 399              		.code	16
 400              		.thumb_func
 402              	SRAM_WRITE:
 403              	.LVL13:
 404              	.LFB45:
 320:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 321:Core/Src/main.c **** }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** void SRAM_WRITE(uint8_t *data, uint8_t address[]) {
 405              		.loc 1 323 51 view -0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              		.loc 1 323 51 is_stmt 0 view .LVU113
 410 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 411              		.cfi_def_cfa_offset 24
 412              		.cfi_offset 3, -24
 413              		.cfi_offset 4, -20
 414              		.cfi_offset 5, -16
 415              		.cfi_offset 6, -12
 416              		.cfi_offset 7, -8
 417              		.cfi_offset 14, -4
 418 0002 0500     		movs	r5, r0
 419 0004 0E00     		movs	r6, r1
 324:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
 420              		.loc 1 324 3 is_stmt 1 view .LVU114
 421 0006 114F     		ldr	r7, .L17
 422 0008 0022     		movs	r2, #0
 423 000a 0421     		movs	r1, #4
 424              	.LVL14:
 425              		.loc 1 324 3 is_stmt 0 view .LVU115
 426 000c 3800     		movs	r0, r7
 427              	.LVL15:
 428              		.loc 1 324 3 view .LVU116
 429 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 430              	.LVL16:
 325:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, (uint8_t *)&CMD_WRITE_SRAM, 1, 100);
 431              		.loc 1 325 3 is_stmt 1 view .LVU117
 432 0012 0F49     		ldr	r1, .L17+4
 433 0014 0F4C     		ldr	r4, .L17+8
 434 0016 6423     		movs	r3, #100
 435 0018 0122     		movs	r2, #1
 436 001a 2000     		movs	r0, r4
 437 001c FFF7FEFF 		bl	HAL_SPI_Transmit
 438              	.LVL17:
 326:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, address, 3, 100);
 439              		.loc 1 326 3 view .LVU118
 440 0020 6423     		movs	r3, #100
 441 0022 0322     		movs	r2, #3
 442 0024 3100     		movs	r1, r6
 443 0026 2000     		movs	r0, r4
 444 0028 FFF7FEFF 		bl	HAL_SPI_Transmit
 445              	.LVL18:
 327:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, data, 1, 100);
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 18


 446              		.loc 1 327 3 view .LVU119
 447 002c 6423     		movs	r3, #100
 448 002e 0122     		movs	r2, #1
 449 0030 2900     		movs	r1, r5
 450 0032 2000     		movs	r0, r4
 451 0034 FFF7FEFF 		bl	HAL_SPI_Transmit
 452              	.LVL19:
 328:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET);
 453              		.loc 1 328 3 view .LVU120
 454 0038 0122     		movs	r2, #1
 455 003a 0421     		movs	r1, #4
 456 003c 3800     		movs	r0, r7
 457 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 458              	.LVL20:
 329:Core/Src/main.c ****   HAL_Delay(100);
 459              		.loc 1 329 3 view .LVU121
 460 0042 6420     		movs	r0, #100
 461 0044 FFF7FEFF 		bl	HAL_Delay
 462              	.LVL21:
 330:Core/Src/main.c ****   return;
 463              		.loc 1 330 3 view .LVU122
 331:Core/Src/main.c **** }
 464              		.loc 1 331 1 is_stmt 0 view .LVU123
 465              		@ sp needed
 466              	.LVL22:
 467              	.LVL23:
 468              		.loc 1 331 1 view .LVU124
 469 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 470              	.L18:
 471 004a C046     		.align	2
 472              	.L17:
 473 004c 00040048 		.word	1207960576
 474 0050 00000000 		.word	CMD_WRITE_SRAM
 475 0054 00000000 		.word	hspi1
 476              		.cfi_endproc
 477              	.LFE45:
 479              		.section	.text.SRAM_READ,"ax",%progbits
 480              		.align	1
 481              		.global	SRAM_READ
 482              		.syntax unified
 483              		.code	16
 484              		.thumb_func
 486              	SRAM_READ:
 487              	.LVL24:
 488              	.LFB46:
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** uint8_t SRAM_READ(uint8_t address[]) {
 489              		.loc 1 333 38 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 8
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		.loc 1 333 38 is_stmt 0 view .LVU126
 494 0000 70B5     		push	{r4, r5, r6, lr}
 495              		.cfi_def_cfa_offset 16
 496              		.cfi_offset 4, -16
 497              		.cfi_offset 5, -12
 498              		.cfi_offset 6, -8
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 19


 499              		.cfi_offset 14, -4
 500 0002 82B0     		sub	sp, sp, #8
 501              		.cfi_def_cfa_offset 24
 502 0004 0500     		movs	r5, r0
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   uint8_t data_back;
 503              		.loc 1 335 3 is_stmt 1 view .LVU127
 336:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
 504              		.loc 1 336 3 view .LVU128
 505 0006 164E     		ldr	r6, .L20
 506 0008 0022     		movs	r2, #0
 507 000a 0421     		movs	r1, #4
 508 000c 3000     		movs	r0, r6
 509              	.LVL25:
 510              		.loc 1 336 3 is_stmt 0 view .LVU129
 511 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 512              	.LVL26:
 337:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, (uint8_t *)&CMD_READ_SRAM, 1, 100);
 513              		.loc 1 337 3 is_stmt 1 view .LVU130
 514 0012 1449     		ldr	r1, .L20+4
 515 0014 144C     		ldr	r4, .L20+8
 516 0016 6423     		movs	r3, #100
 517 0018 0122     		movs	r2, #1
 518 001a 2000     		movs	r0, r4
 519 001c FFF7FEFF 		bl	HAL_SPI_Transmit
 520              	.LVL27:
 338:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, address, 3, 100);
 521              		.loc 1 338 3 view .LVU131
 522 0020 6423     		movs	r3, #100
 523 0022 0322     		movs	r2, #3
 524 0024 2900     		movs	r1, r5
 525 0026 2000     		movs	r0, r4
 526 0028 FFF7FEFF 		bl	HAL_SPI_Transmit
 527              	.LVL28:
 339:Core/Src/main.c ****   HAL_SPI_Receive(&hspi1, &data_back, 1, 100);
 528              		.loc 1 339 3 view .LVU132
 529 002c 6B46     		mov	r3, sp
 530 002e DD1D     		adds	r5, r3, #7
 531              	.LVL29:
 532              		.loc 1 339 3 is_stmt 0 view .LVU133
 533 0030 6423     		movs	r3, #100
 534 0032 0122     		movs	r2, #1
 535 0034 2900     		movs	r1, r5
 536 0036 2000     		movs	r0, r4
 537 0038 FFF7FEFF 		bl	HAL_SPI_Receive
 538              	.LVL30:
 340:Core/Src/main.c ****   HAL_SPI_Receive(&hspi1, &data_back, 1, 100);
 539              		.loc 1 340 3 is_stmt 1 view .LVU134
 540 003c 6423     		movs	r3, #100
 541 003e 0122     		movs	r2, #1
 542 0040 2900     		movs	r1, r5
 543 0042 2000     		movs	r0, r4
 544 0044 FFF7FEFF 		bl	HAL_SPI_Receive
 545              	.LVL31:
 341:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET);
 546              		.loc 1 341 3 view .LVU135
 547 0048 0122     		movs	r2, #1
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 20


 548 004a 0421     		movs	r1, #4
 549 004c 3000     		movs	r0, r6
 550 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 551              	.LVL32:
 342:Core/Src/main.c ****   HAL_Delay(100);
 552              		.loc 1 342 3 view .LVU136
 553 0052 6420     		movs	r0, #100
 554 0054 FFF7FEFF 		bl	HAL_Delay
 555              	.LVL33:
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   return data_back;
 556              		.loc 1 344 3 view .LVU137
 557              		.loc 1 344 10 is_stmt 0 view .LVU138
 558 0058 2878     		ldrb	r0, [r5]
 345:Core/Src/main.c **** }
 559              		.loc 1 345 1 view .LVU139
 560 005a 02B0     		add	sp, sp, #8
 561              		@ sp needed
 562 005c 70BD     		pop	{r4, r5, r6, pc}
 563              	.L21:
 564 005e C046     		.align	2
 565              	.L20:
 566 0060 00040048 		.word	1207960576
 567 0064 00000000 		.word	CMD_READ_SRAM
 568 0068 00000000 		.word	hspi1
 569              		.cfi_endproc
 570              	.LFE46:
 572              		.section	.text.main,"ax",%progbits
 573              		.align	1
 574              		.global	main
 575              		.syntax unified
 576              		.code	16
 577              		.thumb_func
 579              	main:
 580              	.LFB40:
  73:Core/Src/main.c **** 
 581              		.loc 1 73 1 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ Volatile: function does not return.
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586 0000 10B5     		push	{r4, lr}
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 4, -8
 589              		.cfi_offset 14, -4
  82:Core/Src/main.c **** 
 590              		.loc 1 82 3 view .LVU141
 591 0002 FFF7FEFF 		bl	HAL_Init
 592              	.LVL34:
  88:Core/Src/main.c **** 
 593              		.loc 1 88 3 view .LVU142
 594 0006 FFF7FEFF 		bl	SystemClock_Config
 595              	.LVL35:
  95:Core/Src/main.c ****   MX_SPI1_Init();
 596              		.loc 1 95 3 view .LVU143
 597 000a FFF7FEFF 		bl	MX_GPIO_Init
 598              	.LVL36:
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 21


  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 599              		.loc 1 96 3 view .LVU144
 600 000e FFF7FEFF 		bl	MX_SPI1_Init
 601              	.LVL37:
  98:Core/Src/main.c **** 
 602              		.loc 1 98 3 view .LVU145
 603 0012 8021     		movs	r1, #128
 604 0014 0122     		movs	r2, #1
 605 0016 8901     		lsls	r1, r1, #6
 606 0018 0648     		ldr	r0, .L24
 607 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 608              	.LVL38:
 171:Core/Src/main.c **** 
 609              		.loc 1 171 6 view .LVU146
 610 001e 064C     		ldr	r4, .L24+4
 611 0020 0648     		ldr	r0, .L24+8
 612 0022 2100     		movs	r1, r4
 613 0024 FFF7FEFF 		bl	SRAM_WRITE
 614              	.LVL39:
 173:Core/Src/main.c ****   /* USER CODE END 2 */
 615              		.loc 1 173 6 view .LVU147
 173:Core/Src/main.c ****   /* USER CODE END 2 */
 616              		.loc 1 173 18 is_stmt 0 view .LVU148
 617 0028 2000     		movs	r0, r4
 618 002a FFF7FEFF 		bl	SRAM_READ
 619              	.LVL40:
 173:Core/Src/main.c ****   /* USER CODE END 2 */
 620              		.loc 1 173 16 discriminator 1 view .LVU149
 621 002e 044B     		ldr	r3, .L24+12
 622 0030 1870     		strb	r0, [r3]
 623              	.L23:
 178:Core/Src/main.c ****   {
 624              		.loc 1 178 3 is_stmt 1 view .LVU150
 185:Core/Src/main.c ****   /* USER CODE END 3 */
 625              		.loc 1 185 3 view .LVU151
 178:Core/Src/main.c ****   {
 626              		.loc 1 178 9 view .LVU152
 627 0032 FEE7     		b	.L23
 628              	.L25:
 629              		.align	2
 630              	.L24:
 631 0034 00080048 		.word	1207961600
 632 0038 00000000 		.word	address
 633 003c 00000000 		.word	data
 634 0040 00000000 		.word	read_data
 635              		.cfi_endproc
 636              	.LFE40:
 638              		.global	hspi1
 639              		.section	.bss.hspi1,"aw",%nobits
 640              		.align	2
 643              	hspi1:
 644 0000 00000000 		.space	100
 644      00000000 
 644      00000000 
 644      00000000 
 644      00000000 
 645              		.global	read_data
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 22


 646              		.section	.bss.read_data,"aw",%nobits
 649              	read_data:
 650 0000 00       		.space	1
 651              		.global	address
 652              		.section	.data.address,"aw"
 653              		.align	2
 656              	address:
 657 0000 000001   		.ascii	"\000\000\001"
 658              		.global	data
 659              		.section	.data.data,"aw"
 662              	data:
 663 0000 55       		.byte	85
 664              		.section	.rodata.CMD_WRITE_SRAM,"a"
 667              	CMD_WRITE_SRAM:
 668 0000 02       		.byte	2
 669              		.section	.rodata.CMD_READ_SRAM,"a"
 672              	CMD_READ_SRAM:
 673 0000 03       		.byte	3
 674              		.text
 675              	.Letext0:
 676              		.file 3 "C:/Users/Toby Heinemann/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpa
 677              		.file 4 "C:/Users/Toby Heinemann/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpa
 678              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 679              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 680              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 681              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 682              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 683              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 684              		.file 11 "Core/Inc/main.h"
 685              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 686              		.file 13 "<built-in>"
ARM GAS  C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:166    .text.MX_GPIO_Init:00000098 $d
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:173    .text.Error_Handler:00000000 $t
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:179    .text.Error_Handler:00000000 Error_Handler
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:211    .text.MX_SPI1_Init:00000000 $t
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:216    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:297    .text.MX_SPI1_Init:00000044 $d
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:643    .bss.hspi1:00000000 hspi1
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:303    .text.SystemClock_Config:00000000 $t
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:309    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:396    .text.SRAM_WRITE:00000000 $t
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:402    .text.SRAM_WRITE:00000000 SRAM_WRITE
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:473    .text.SRAM_WRITE:0000004c $d
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:667    .rodata.CMD_WRITE_SRAM:00000000 CMD_WRITE_SRAM
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:480    .text.SRAM_READ:00000000 $t
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:486    .text.SRAM_READ:00000000 SRAM_READ
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:566    .text.SRAM_READ:00000060 $d
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:672    .rodata.CMD_READ_SRAM:00000000 CMD_READ_SRAM
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:573    .text.main:00000000 $t
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:579    .text.main:00000000 main
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:631    .text.main:00000034 $d
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:656    .data.address:00000000 address
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:662    .data.data:00000000 data
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:649    .bss.read_data:00000000 read_data
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:640    .bss.hspi1:00000000 $d
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:650    .bss.read_data:00000000 $d
C:\Users\TOBYHE~1\AppData\Local\Temp\ccYRuXpH.s:653    .data.address:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_SPI_Transmit
HAL_Delay
HAL_SPI_Receive
HAL_Init
